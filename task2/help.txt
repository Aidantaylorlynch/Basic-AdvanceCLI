Welcome to the help page for ADVANCED CLI. The follow guide demonstrate
the functionality and correct usage of this program.


OVERVIEW:

This is a basic command line interpreter that when executed, waits for input
from a user:

  ->>   USER$

This CLI supports the following operations:
  - clear
  - cd <directory>
  - ls <directory>
  - echo <statement>
  - help
  - quit
  - create <file>
  - copy <old> <new>
  - search <pattern> <file>
  - run <program>
  - halt <program>


CLEAR:
clear

By entering "clear", the output screen with be cleared, and the user pointer will
be moved to index 1,1.

sample usage: USER$ clear


CD :
cd <directory>

By entering "cd <directory>", the default directory will be changed to <directory>.
If no directory is specified, the default directory will be changed to the users
HOME environment variable. This command also updates the users PWD variable.

sample usage: USER$ cd /Users
sample usage: USER$ cd


LS:
ls <directory>

By entering "ls <directory>", the contents of the specified directory will be
listed to the screen. If no directory is specified, the current directory contents
will be listed.

sample usage: USER$ ls /Desktop
sample usage: USER$ ls


ECHO:
echo <statement>

By entering "echo <statement>", <statement> will be printed to the screen. In order
for the command to recognize the <statement>, it must be enclosed by double quotation marks.

sample usage: USER$ echo "Hello world!"


HELP:
help

By entering "help", the help pages for this program will be displayed.
**NOTE** the help command assumes that it is being executed in the same directory
as this program. It will not work if the current directory is different.

sample usage: USER$ help


QUIT:
quit

By entering "quit" command will cause the current execution of the program to stop.

sample usage: USER$ quit


CREATE:
create <file>

By entering "create <file>", a new file is made that is named <file>.
**NOTE** if there is a file that already exists with name <file>, no file will be
created.

sample usage: USER$ create myFile.txt


COPY:
copy <old> <new>

By entering "copy <old> <new>", the contents of the file specified by <old>, will
be copied and appended to a new file named <new>.
**NOTE** if there is a file that already exists with name <new>, no file will be
created.

sample usage: USER$ copy help.txt myCopiedFile.txt


SEARCH:
search <pattern> <file>

By entering "search <pattern> <file>", the number of occurrences of <pattern> in
file <file> will be displayed on the screen. If the file specified does not exist,
an error will be printed.
**NOTE** the <pattern>
must be a sequence of characters that does not contain any whitespace, or new line
characters.

sample usage: USER$ search "sample usage" help.txt


RUN:
run <program>

By entering "run <program>", the corresponding program will be executed.
**NOTE** the run command supports system programs such as "ls", "pkill", "find",
etc. To execute other programs such as c executables, be sure to prefix your program name
with ./

sample usage: USER$ run ls


HALT:
halt <program>

By entering "halt <program>", the corresponding program will stop its execution and
terminate. **NOTE** this command supports the running of all programs, be sure to use
correct casing when specifying <program>.

sample usage: USER$ halt Mail
